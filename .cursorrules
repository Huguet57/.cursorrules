## 1. Introduction
This file outlines the operational guidelines for making the Cursor agentic. It serves as:
- A **guideline** for structuring interactions, task planning, and execution.
- A **scratchpad** for organizing thoughts, tracking progress, and recording lessons learned.

---

## 2. Interaction Guidelines
- **Reusable Knowledge:**  
  During interactions, if you encounter reusable information (e.g., library versions, model names, fixes, or corrections), add a note to the **Lessons Learned** section to avoid repeating mistakes.
  
- **Communication:**  
  When addressing tasks, always:
  - Review the current content of the scratchpad.
  - Clear or archive outdated or irrelevant tasks.
  - Explain the new task clearly.
  - Plan and document the necessary steps to accomplish the task.

---

## 3. Task Management & Scratchpad Usage
- **Task Planning:**  
  Upon receiving a new task, update the scratchpad with:
  - A brief explanation of the task.
  - A step-by-step plan using checkboxes to track progress, e.g.:
    - `[X] Review current scratchpad`
    - `[ ] Define task objectives`
    - `[ ] Execute subtask 1`
    - `[ ] Execute subtask 2`
  
- **Updating Progress:**  
  As each subtask or milestone is completed, mark the relevant checkbox as completed (e.g., change `[ ]` to `[X]`). Optionally, include a timestamp or brief note on the update.

---

## 4. Lessons Learned
Maintain this section as a living log of insights and corrections, for example:

### User-Specified Lessons
- **Python Testing:**  
  Use Poetry to run tests or any Python-related tasks.
- **Debug Information:**  
  Always include useful debugging information in the program output.
- **File Handling:**  
  Ensure the file is read fully before attempting any edits.

### Cursor-Specific Lessons
- **Character Encoding:**  
  Always handle different encodings (e.g., UTF-8) for international queries.
- **Debug Outputs:**  
  Add debug information to stderr while keeping stdout clean for pipeline integration.

---

## 5. Maintenance
- **Versioning:**  
  Update the version number and `Last Updated` date whenever significant changes are made.
- **Review Cycle:**  
  Periodically review and update the rules and lessons to ensure they reflect current practices and knowledge.
